# 基本配置
-target 21
-optimizationpasses 5
-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-dontskipnonpubliclibraryclassmembers
-dontoptimize
-dontpreverify
-ignorewarnings
-optimizations !retCode/simplification/arithmetic,!field/*,!class/merging/*
-keepattributes *Annotation*,Signature,SourceFile,LineNumberTable
-allowaccessmodification
-repackageclasses ''
-verbose
-dontshrink
-useuniqueclassmembernames
-adaptclassstrings
-keepattributes Exceptions,InnerClasses,RuntimeVisibleAnnotations,Deprecated,EnclosingMethod
-keepnames interface ** { *; }
-keepclassmembers enum * { *; }
-keepclassmembers class * {
    @org.springframework.context.annotation.Bean *;
    @org.springframework.beans.factory.annotation.Autowired *;
    @org.springframework.beans.factory.annotation.Value *;
    @org.springframework.stereotype.Service *;
    @org.springframework.stereotype.Component *;
}

# 保留特定包及其子包下的所有类
-keep class cn.treedeep.link.config.** { *; }
-keep class cn.treedeep.link.service.** { *; }
-keep class cn.treedeep.link.device.protocol.model.** { *; }

# 保留特定类的类名和方法名，但允许混淆成员变量
-keep class cn.treedeep.link.core.event.DeviceEvent {
    <methods>;
}
-keep class cn.treedeep.link.device.client.Pv1Device {
    <methods>;
}
-keep class cn.treedeep.link.device.client.SimulatorManager {
    <methods>;
}
-keep class cn.treedeep.link.device.netty.Pv1NettyServer {
    <methods>;
}
-keep class cn.treedeep.link.device.netty.ServerHandler {
    <methods>;
}
-keep class cn.treedeep.link.device.client.DeviceFrameDecoder {
    <methods>;
}
-keep class cn.treedeep.link.device.client.DeviceFrameEncoder {
    <methods>;
}
-keep class cn.treedeep.link.device.client.SimulatorHandler {
    <methods>;
}
-keep class cn.treedeep.link.device.protocol.codec.FrameDecoder {
    <methods>;
}
-keep class cn.treedeep.link.device.protocol.codec.FrameEncoder {
    <methods>;
}

# 允许混淆成员变量
-keepclassmembernames class * {
    !private <fields>;
}

# 保留所有类的非private方法及其参数
-keepclassmembers class * {
    !private <fields>;
}

# 保留 META-INF 目录
-keep class **.META-INF.** { *; }
-keepattributes SourceFile,LineNumberTable

# 保留所有枚举类和成员
-keep enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
    **[] $VALUES;
    <fields>;
    <methods>;
}

# 保留枚举类的类名和签名
-keep enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}
-keepnames enum *

# 忽略note消息
-dontnote

# 保留 JDK 21 模块化支持
-keepattributes Module, ModuleMainClass, ModulePackages

# 保留 Spring Boot 的自动配置和组件扫描
-keep @org.springframework.boot.autoconfigure.SpringBootApplication class * { *; }
-keep @org.springframework.stereotype.Component class * { *; }
-keep @org.springframework.stereotype.Service class * { *; }
-keep @org.springframework.stereotype.Repository class * { *; }
-keep @org.springframework.stereotype.Controller class * { *; }
-keep @org.springframework.context.annotation.Configuration class * { *; }

# 保留 Spring 的反射调用（如 @Autowired、@Value）
-keepclassmembers class * {
    @org.springframework.beans.factory.annotation.Autowired *;
    @org.springframework.beans.factory.annotation.Value *;
    @org.springframework.context.annotation.Bean *;
}

# 保留 Jackson JSON 序列化相关的类和方法
-keep class com.fasterxml.jackson.** { *; }
-keepclassmembers class * {
    @com.fasterxml.jackson.annotation.JsonIgnore *;
    @com.fasterxml.jackson.annotation.JsonProperty *;
}

# 保留 JDK 21 的新特性支持（如虚拟线程）
-keep class java.lang.Thread$Builder* { *; }
-keep class java.lang.VirtualThread { *; }

# 保留 Lombok 生成的代码
-keep class lombok.* { *; }
-keepclasseswithmembers class * {
    @lombok.* <methods>;
}

# 保留资源文件
-keepclassmembers class * {
    public static org.springframework.core.io.Resource[] resources;
}

# 保留日志框架（SLF4J/Logback）
-keep class org.slf4j.** { *; }
-keep class ch.qos.logback.** { *; }
-keepclassmembers class * {
    @org.slf4j.Logger *;
}

# 保留所有接口不被混淆
-keep interface * {
    *;
}

# 保留方法参数名（关键配置）
# -keepattributes MethodParameters, RuntimeVisibleParameterAnnotations, Signature

# 保留所有接口方法的参数名
-keepclassmembers interface * {
    *;
}
